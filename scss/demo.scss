@import 'mixins/vr/vr-main';

$grid-break-s: 30rem;
$grid-break-m: 60rem;
$grid-break-l: 60rem;

$grid-gutter: $distance-m;

$black: #000;
$gray: lighten($black, 75%);
$white: #fff;

$yellow: #fff6cc;
$red: #ff1919;

$bg-color: $white;
$text-color: $black;

// Layout
::selection {
	color: $white;
	text-shadow: none;

	background-color: $red; /* WebKit/Blink Browsers */
}

::-moz-selection {
	color: $white;
	text-shadow: none;

	background-color: $red; /* Gecko Browsers */
}

body {
	overflow-x: hidden;

	padding: $paragraph-trailer 0 0;

	color: $text-color;

	background-color: $bg-color;

	@media (min-width: $grid-break-m) {
		padding-top: $rhythm * 3;
	}
}

header,
main,
footer {
	padding: 0 $grid-gutter;
}

header {
	@media (min-width: $grid-break-m) {
		position: fixed;
		top: 0;
		bottom: 0;
		left: 0;

		width: calc((100% / 3) - #{$grid-gutter});

		padding-top: $rhythm * 2;
	}
}

main,
footer {
	@media (min-width: $grid-break-m) {
		margin-left: (100% / 3 * 1);
	}
}

.section {
	$section-border-width: $border-width-m;
	$section-spacing: $distance-l * 2;

	margin: 0 0 ($section-spacing - $section-border-width);
	padding: 0 0 ($section-spacing - $paragraph-trailer);

	border-bottom: $section-border-width solid $text-color;

	&__title {
		@include vr($font-display, $font-size-l);

		&:before {
			color: $red;

			content: '# ';
		}
	}

	&__subtitle {
		@include vr($font-display, $base-font-size);

		padding-top: $paragraph-trailer;
		padding-bottom: $paragraph-trailer;

		color: $red;
	}
}

// Typography
a {
	position: relative;

	color: $text-color;
	text-decoration: none;
	text-shadow: -1px -1px 0 $white,
				 1px -1px 0 $white,
				 -1px 1px 0 $white,
				 1px 1px 0 $white;

	background-image: linear-gradient(to top, transparent,
											  transparent 2px, $black 2px, $black 3px,
											  transparent 3px);

	&:hover {
		color: $red;

		background-image: linear-gradient(to top, transparent,
												  transparent 2px, $red 2px, $red 3px,
												  transparent 3px);
	}
}

.article {
	&__row {
		margin: 0 ($grid-gutter * -1);

		// Clearfix
		&:after {
			clear: both;
			display: table;
			content: '';
		}
	}

	&__col {
		float: left;

		width: 100%;

		padding: 0 $grid-gutter;

		@media (min-width: $grid-break-m) {
			width: 50%;
		}
	}

	&__dropcap {
		$dropcap-size: $rhythm * 3.5;

		@include vr($font-display, $font-size-xl);

		float: left;

		width: $dropcap-size;

		margin-right: $distance-m;

		color: $white;
		font-weight: bold;
		line-height: $dropcap-size;
		text-align: center;

		background-color: $red;
		transform: translate(0, ($rhythm));
	}

	&__streamer {
		letter-spacing: 0.0625em;
		text-transform: uppercase;
	}

	h1, .h1,
	h2, .h2,
	h3, .h3,
	h4, .h4,
	h5, .h5,
	h6, .h6 {
		padding-top: $distance-l;
	}
}

blockquote {
	$blockquote-border-width: $border-width-m;

	display: inline-block;

	margin: ($blockquote-border-width * -1) 0 ($paragraph-trailer - $blockquote-border-width);
	padding: ($distance-l + $distance-l) $paragraph-trailer 0;

	border: $blockquote-border-width solid $text-color;
}

form {
	label {
		font-weight: bold;
	}

	legend {
		display: none;
	}

	input,
	select,
	textarea {
		color: $text-color;

		background-color: transparent;
		border-color: $text-color;
		outline: none;

		&:active,
		&:focus {
			border-color: $red;
		}
	}

	input {
		&[type=radio],
		&[type=checkbox] {
			+ label {
				font-weight: normal;
			}
		}
	}
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
	font-weight: bold;
}

// Elements
%btn {
	padding: ($distance-m + $distance-s) ($distance-l + $distance-s);

	color: $text-color;
	font-weight: bold;

	background-color: transparent;
	border-color: $text-color;

	&:active,
	&:focus,
	&:hover {
		color: $white;

		background-color: $red;
		border-color: $red;
	}
}

// Styling
.logo {
	@include vr($font-body, $font-size-xl);

	color: $red;

	font-weight: bold;
}

.grid {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 9999;
	display: flex;

	pointer-events: none;

	&__item {
		width: (100% / 3);

		margin: ($border-width-s * -1) ($grid-gutter - $border-width-s);

		border: $border-width-s solid $vr-color;
	}
}
